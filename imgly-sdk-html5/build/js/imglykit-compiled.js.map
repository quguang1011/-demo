{"version":3,"sources":["imglykit.js"],"names":[],"mappings":"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","file":"imglykit-compiled.js","sourcesContent":["/*!\n * Photo Editor SDK - photoeditorsdk.com\n * Copyright (c) 2013-2015 9elements GmbH\n *\n * Released under Attribution-NonCommercial 3.0 Unported\n * http://creativecommons.org/licenses/by-nc/3.0/\n *\n * For commercial use, please contact us at contact@9elements.com\n */\n\nconst VERSION = '2.0.3-13'\nimport EventEmitter from './lib/event-emitter'\nimport RenderImage from './lib/render-image'\n\nimport ImageExporter from './lib/image-exporter'\nimport VersionChecker from './lib/version-checker'\nimport { RenderType, ImageFormat } from './constants'\nimport Utils from './lib/utils'\nimport Exif from './lib/exif'\nimport RotationOperation from './operations/rotation-operation'\nimport FlipOperation from './operations/flip-operation'\n\n/**\n * @class\n * @param {Object} options\n * @param {Image} [options.image] - The source image\n * @param {HTMLElement} [options.container] - Specifies where the UI should be\n *                                          added to. If none is given, the UI\n *                                          will automatically be disabled.\n * @param {Boolean} [options.ui.enabled=true] - Enables or disables the UI\n * @param {Boolean} [options.renderOnWindowResize] - Specifies whether the canvas\n *                                                 should re-render itself when\n *                                                 the window is being resized.\n * @param {String} [options.assetsUrl='assets'] - The base path for all external assets.\n * @param {String} [options.renderer='webgl'] - The renderer identifier. Can either\n *                                            be 'webgl' or 'canvas'.\n */\nclass ImglyKit extends EventEmitter {\n  constructor (options) {\n    super()\n\n    // `options` is required\n    if (typeof options === 'undefined') {\n      throw new Error('No options given.')\n    }\n\n    // Set default options\n    options = Utils.defaults(options, {\n      assetsUrl: 'assets',\n      container: null,\n      renderOnWindowResize: false,\n      versionCheck: true\n    })\n    options.ui = options.ui || {}\n    options.ui = Utils.defaults(options.ui, {\n      enabled: true\n    })\n\n    if (typeof options.image === 'undefined' && !options.ui.enabled) {\n\n      throw new Error('`options.image` needs to be set when UI is disabled.')\n    }\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this._options = options\n\n    /**\n     * The stack of {@link Operation} instances that will be used\n     * to render the final Image\n     * @type {Array.<ImglyKit.Operation>}\n     */\n    this.operationsStack = []\n\n    /**\n     * The registered UI types that can be selected via the `ui` option\n     * @type {Object.<String, UI>}\n     * @private\n     */\n    this._registeredUIs = {}\n\n    // Register the default UIs\n    this._registerUIs()\n\n    /**\n     * The registered operations\n     * @type {Object.<String, ImglyKit.Operation>}\n     */\n    this._registeredOperations = {}\n\n    // Register the default operations\n    this._registerOperations()\n\n    if (typeof window !== 'undefined' && this._options.versionCheck) {\n      this._versionChecker = new VersionChecker(VERSION)\n    }\n\n    if (this._options.image) {\n      this._parseExif(this._options.image)\n    }\n\n    if (this._options.ui.enabled) {\n      this._initUI()\n      if (this._options.renderOnWindowResize) {\n        this._handleWindowResize()\n      }\n    }\n  }\n\n  /**\n   * Renders the image\n   * @param  {ImglyKit.RenderType} [renderType=ImglyKit.RenderType.DATAURL] - The output type\n   * @param  {ImglyKit.ImageFormat} [imageFormat=ImglyKit.ImageFormat.PNG] - The output image format\n   * @param  {string} [dimensions] - The final dimensions of the image\n   * @param  {Number} [quality] - The image quality, between 0 and 1\n   * @return {Promise}\n   */\n  render (renderType, imageFormat, dimensions, quality) {\n    var settings = ImageExporter.validateSettings(renderType, imageFormat)\n\n    renderType = settings.renderType\n    imageFormat = settings.imageFormat\n\n    // Create a RenderImage\n    var renderImage = new RenderImage(\n      this._options.image,\n      this.operationsStack,\n      dimensions,\n      this._options.renderer)\n\n    // Set all operations to dirty, since we have another webgl renderer\n    for (let i = 0; i < this.operationsStack.length; i++) {\n      let operation = this.operationsStack[i]\n      if (!operation) { continue }\n      operation.dirty = true\n    }\n\n    // Initiate image rendering\n    return renderImage.render()\n      .then(() => {\n        var canvas = renderImage.getRenderer().getCanvas()\n        return ImageExporter.export(this, this._options.image, canvas, renderType, imageFormat, quality)\n      })\n  }\n\n  /**\n   * Sets the image and parses the exif data\n   * @param {Image} image\n   * @param {Exif} exif = null\n   */\n  setImage (image, exif = null) {\n    this._options.image = image\n    if (!exif) {\n      this._parseExif(image)\n    } else {\n      this._exif = exif\n    }\n  }\n\n  /**\n   * Parses the exif data and fixes the orientation if necessary\n   * @param {Image} image\n   * @private\n   */\n  _parseExif (image) {\n    if (Exif.isJPEG(image.src)) {\n      this._exif = null\n      try {\n        this._exif = Exif.fromBase64String(image.src)\n      } catch(e) {}\n      if (!this._exif) return\n\n      let exifTags = this._exif.getTags()\n\n      if (exifTags && exifTags.Orientation) {\n        if (exifTags.Orientation !== 1 && exifTags.Orientation !== 2) {\n          // We need to rotate\n          let degrees = 0\n          switch (exifTags.Orientation) {\n            case 7:\n            case 8:\n              degrees = -90\n              break\n            case 3:\n            case 4:\n              degrees = -180\n              break\n            case 5:\n            case 6:\n              degrees = 90\n              break\n          }\n\n          const rotationOperation = new RotationOperation(this, { degrees: degrees })\n          this.operationsStack.push(rotationOperation)\n        }\n\n        if ([2, 4, 5, 7].indexOf(exifTags.Orientation) !== -1) {\n          const flipOperation = new FlipOperation(this, { horizontal: true })\n          this.operationsStack.push(flipOperation)\n        }\n\n        this._exif.setOrientation(1)\n      }\n    }\n  }\n\n  /**\n   * Resets all custom and selected operations\n   */\n  reset () {\n\n  }\n\n  /**\n   * Returns the asset path for the given filename\n   * @param  {String} asset\n   * @return {String}\n   */\n  getAssetPath (asset) {\n    var isBrowser = typeof window !== 'undefined'\n    if (isBrowser) {\n      /* istanbul ignore next */\n      return this._options.assetsUrl + '/' + asset\n    } else {\n      var path = require('path')\n      return path.resolve(this._options.assetsUrl, asset)\n    }\n  }\n\n  /**\n   * If `options.renderOnWindowResize` is set to true, this function\n   * will re-render the canvas with a slight delay so that it won't\n   * cause lagging of the resize\n   * @private\n   */\n  _handleWindowResize () {\n    let timer = null\n    window.addEventListener('resize', () => {\n      if (timer !== null) {\n        clearTimeout(timer)\n      }\n\n      timer = setTimeout(() => {\n        timer = null\n        this.ui.render()\n      }, 300)\n    })\n  }\n\n  /**\n   * Registers all default UIs\n   * @private\n   */\n  _registerUIs () {\n    this.registerUI(ImglyKit.NightUI)\n  }\n\n  /**\n   * Registers all default operations\n   * @private\n   */\n  _registerOperations () {\n    for (let operationName in ImglyKit.Operations) {\n      this.registerOperation(ImglyKit.Operations[operationName])\n    }\n  }\n\n  /**\n   * Registers the given operation\n   * @param {ImglyKit.Operation} operation - The operation class\n   */\n  registerOperation (operation) {\n    this._registeredOperations[operation.prototype.identifier] = operation\n    if (this.ui) {\n      this.ui.addOperation(operation)\n    }\n  }\n\n  /**\n   * Registers the given UI\n   * @param {UI} ui\n   */\n  registerUI (ui) {\n    this._registeredUIs[ui.prototype.identifier] = ui\n  }\n\n  /**\n   * Initializes the UI\n   * @private\n   */\n  /* istanbul ignore next */\n  _initUI () {\n    var UI\n\n    if (this._options.ui.enabled === true) {\n      // Select the first UI by default\n      UI = Utils.values(this._registeredUIs)[0]\n    }\n\n    if (!UI) {\n      return\n    }\n\n    /**\n     * @type {ImglyKit.UI}\n     */\n    this.ui = new UI(this, this._options)\n    this.ui.pipeEvents(this)\n  }\n\n  /**\n   * Returns the Operation instance with the given identifier,\n   * if it exists\n   * @param {String} identifier\n   * @returns {Operation}\n   */\n  getOperationFromStack (identifier) {\n    let operation = this.operationsStack.filter((operation) => {\n      return operation.identifier === identifier\n    })[0]\n    return operation\n  }\n\n  /**\n   * Runs the UI, if present\n   */\n  run () {\n    if (typeof this.ui !== 'undefined') {\n      this.ui.run()\n    }\n  }\n\n  get exif () { return this._exif }\n\n  get registeredOperations () {\n    return this._registeredOperations\n  }\n\n  dispose () {\n    this._exif.dispose()\n    this._exif = null\n  }\n}\n\n/**\n * The current version of the SDK\n * @name ImglyKit.version\n * @internal Keep in sync with package.json\n */\nImglyKit.version = VERSION\n\n// Exposed classes\nImglyKit.RenderImage = RenderImage\nImglyKit.Color = require('./lib/color')\nImglyKit.Filter = require('./operations/filters/filter')\nImglyKit.Operation = require('./operations/operation')\nImglyKit.Operations = {}\nImglyKit.Operations.Filters = require('./operations/filters-operation')\nImglyKit.Operations.Crop = require('./operations/crop-operation')\nImglyKit.Operations.Rotation = require('./operations/rotation-operation')\nImglyKit.Operations.Saturation = require('./operations/saturation-operation')\nImglyKit.Operations.Contrast = require('./operations/contrast-operation')\nImglyKit.Operations.Brightness = require('./operations/brightness-operation')\nImglyKit.Operations.Flip = require('./operations/flip-operation')\nImglyKit.Operations.TiltShift = require('./operations/tilt-shift-operation')\nImglyKit.Operations.RadialBlur = require('./operations/radial-blur-operation')\nImglyKit.Operations.Text = require('./operations/text-operation')\nImglyKit.Operations.Stickers = require('./operations/stickers-operation')\nImglyKit.Operations.Frames = require('./operations/frames-operation')\nImglyKit.Operations.Brush = require('./operations/brush-operation')\n\nImglyKit.Filters = {}\nImglyKit.Filters.A15 = require('./operations/filters/a15-filter')\nImglyKit.Filters.Breeze = require('./operations/filters/breeze-filter')\nImglyKit.Filters.BW = require('./operations/filters/bw-filter')\nImglyKit.Filters.BWHard = require('./operations/filters/bwhard-filter')\nImglyKit.Filters.Celsius = require('./operations/filters/celsius-filter')\nImglyKit.Filters.Chest = require('./operations/filters/chest-filter')\nImglyKit.Filters.Fixie = require('./operations/filters/fixie-filter')\nImglyKit.Filters.Food = require('./operations/filters/food-filter')\nImglyKit.Filters.Fridge = require('./operations/filters/fridge-filter')\nImglyKit.Filters.Front = require('./operations/filters/front-filter')\nImglyKit.Filters.Glam = require('./operations/filters/glam-filter')\nImglyKit.Filters.Gobblin = require('./operations/filters/gobblin-filter')\nImglyKit.Filters.K1 = require('./operations/filters/k1-filter')\nImglyKit.Filters.K2 = require('./operations/filters/k2-filter')\nImglyKit.Filters.K6 = require('./operations/filters/k6-filter')\nImglyKit.Filters.KDynamic = require('./operations/filters/kdynamic-filter')\nImglyKit.Filters.Lenin = require('./operations/filters/lenin-filter')\nImglyKit.Filters.Lomo = require('./operations/filters/lomo-filter')\nImglyKit.Filters.Mellow = require('./operations/filters/mellow-filter')\nImglyKit.Filters.Morning = require('./operations/filters/morning-filter')\nImglyKit.Filters.Orchid = require('./operations/filters/orchid-filter')\nImglyKit.Filters.Pola = require('./operations/filters/pola-filter')\nImglyKit.Filters.Pola669 = require('./operations/filters/pola669-filter')\nImglyKit.Filters.Quozi = require('./operations/filters/quozi-filter')\nImglyKit.Filters.Semired = require('./operations/filters/semired-filter')\nImglyKit.Filters.Sunny = require('./operations/filters/sunny-filter')\nImglyKit.Filters.Texas = require('./operations/filters/texas-filter')\nImglyKit.Filters.X400 = require('./operations/filters/x400-filter')\n\n// Exposed constants\nImglyKit.RenderType = RenderType\nImglyKit.ImageFormat = ImageFormat\nImglyKit.Vector2 = require('./lib/math/vector2')\n\n// UI\nImglyKit.NightUI = require('./ui/night/ui')\n\nexport default ImglyKit\n"]}